# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = ["File"]
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type MarkdownRemark
  childrenMarkdownRemark: [MarkdownRemark]

  # Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node
  childMarkdownRemark: MarkdownRemark
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  polyfill: Boolean
  pathPrefix: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteSiteMetadata {
  title: String
  description: String
  author: String
}

type SiteFunction implements Node {
  apiRoute: String!
  originalFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageContext {
  slug: String
  isbn: String
  genre: String
}

type MarkdownHeading {
  id: String
  value: String
  depth: Int
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownExcerptFormats {
  PLAIN
  HTML
  MARKDOWN
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MarkdownRemark implements Node {
  id: ID!
  frontmatter: MarkdownRemarkFrontmatter
  excerpt(pruneLength: Int = 140, truncate: Boolean = false, format: MarkdownExcerptFormats = PLAIN): String
  rawMarkdownBody: String
  fileAbsolutePath: String
  html: String
  htmlAst: JSON
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  timeToRead: Int
  tableOfContents(absolute: Boolean = false, pathToSlugField: String = "", maxDepth: Int, heading: String): String
  wordCount: MarkdownWordCount
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type MarkdownRemarkFrontmatter {
  title: String
  slug: String
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  isbn: String
  genre: String
  rating: Int
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type ImageLinks {
  thumbnail: String
}

type VolumeInfo {
  title: String
  subtitle: String
  publisher: String
  publishedDate: String
  description: String
  pageCount: Int
  printType: String
  averageRating: Int
  ratingsCount: Int
  maturityRating: String
  allowAnonLogging: Boolean
  contentVersion: String
  language: String
  previewLink: String
  infoLink: String
  canonicalVolumeLink: String
  imageLinks: ImageLinks
  authors: [String]
}

type BookData {
  isbn: String
  volumeInfo: VolumeInfo
}

type Book implements Node {
  bookData: BookData
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type BookShelfData implements Node {
  isbn: String
  volumeInfo: VolumeInfo
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Bookshelf implements Node {
  BookShelfData: [BookShelfData]
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type book implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  bookData: bookBookData
}

type bookBookData {
  kind: String
  id: String
  etag: String
  selfLink: String
  volumeInfo: bookBookDataVolumeInfo
  saleInfo: bookBookDataSaleInfo
  accessInfo: bookBookDataAccessInfo
  searchInfo: bookBookDataSearchInfo
  isbn: String
}

type bookBookDataVolumeInfo {
  title: String
  subtitle: String
  authors: [String]
  publisher: String
  publishedDate(formatString: String, fromNow: Boolean, difference: String, locale: String): Date
  description: String
  industryIdentifiers: [bookBookDataVolumeInfoIndustryIdentifiers]
  readingModes: bookBookDataVolumeInfoReadingModes
  pageCount: Int
  printType: String
  categories: [String]
  averageRating: Float
  ratingsCount: Int
  maturityRating: String
  allowAnonLogging: Boolean
  contentVersion: String
  panelizationSummary: bookBookDataVolumeInfoPanelizationSummary
  imageLinks: bookBookDataVolumeInfoImageLinks
  language: String
  previewLink: String
  infoLink: String
  canonicalVolumeLink: String
}

type bookBookDataVolumeInfoIndustryIdentifiers {
  type: String
  identifier: String
}

type bookBookDataVolumeInfoReadingModes {
  text: Boolean
  image: Boolean
}

type bookBookDataVolumeInfoPanelizationSummary {
  containsEpubBubbles: Boolean
  containsImageBubbles: Boolean
}

type bookBookDataVolumeInfoImageLinks {
  smallThumbnail: String
  thumbnail: String
}

type bookBookDataSaleInfo {
  country: String
  saleability: String
  isEbook: Boolean
  listPrice: bookBookDataSaleInfoListPrice
  retailPrice: bookBookDataSaleInfoRetailPrice
  buyLink: String
  offers: [bookBookDataSaleInfoOffers]
}

type bookBookDataSaleInfoListPrice {
  amount: Int
  currencyCode: String
}

type bookBookDataSaleInfoRetailPrice {
  amount: Int
  currencyCode: String
}

type bookBookDataSaleInfoOffers {
  finskyOfferType: Int
  listPrice: bookBookDataSaleInfoOffersListPrice
  retailPrice: bookBookDataSaleInfoOffersRetailPrice
}

type bookBookDataSaleInfoOffersListPrice {
  amountInMicros: Int
  currencyCode: String
}

type bookBookDataSaleInfoOffersRetailPrice {
  amountInMicros: Int
  currencyCode: String
}

type bookBookDataAccessInfo {
  country: String
  viewability: String
  embeddable: Boolean
  publicDomain: Boolean
  textToSpeechPermission: String
  epub: bookBookDataAccessInfoEpub
  pdf: bookBookDataAccessInfoPdf
  webReaderLink: String
  accessViewStatus: String
  quoteSharingAllowed: Boolean
}

type bookBookDataAccessInfoEpub {
  isAvailable: Boolean
  acsTokenLink: String
}

type bookBookDataAccessInfoPdf {
  isAvailable: Boolean
}

type bookBookDataSearchInfo {
  textSnippet: String
}

type bookshelf implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  bookShelfData: [bookshelfBookShelfData]
}

type bookshelfBookShelfData {
  kind: String
  id: String
  etag: String
  selfLink: String
  volumeInfo: bookshelfBookShelfDataVolumeInfo
  saleInfo: bookshelfBookShelfDataSaleInfo
  accessInfo: bookshelfBookShelfDataAccessInfo
  searchInfo: bookshelfBookShelfDataSearchInfo
  isbn: String
}

type bookshelfBookShelfDataVolumeInfo {
  title: String
  subtitle: String
  authors: [String]
  publisher: String
  publishedDate(formatString: String, fromNow: Boolean, difference: String, locale: String): Date
  description: String
  industryIdentifiers: [bookshelfBookShelfDataVolumeInfoIndustryIdentifiers]
  readingModes: bookshelfBookShelfDataVolumeInfoReadingModes
  pageCount: Int
  printType: String
  categories: [String]
  averageRating: Float
  ratingsCount: Int
  maturityRating: String
  allowAnonLogging: Boolean
  contentVersion: String
  panelizationSummary: bookshelfBookShelfDataVolumeInfoPanelizationSummary
  imageLinks: bookshelfBookShelfDataVolumeInfoImageLinks
  language: String
  previewLink: String
  infoLink: String
  canonicalVolumeLink: String
}

type bookshelfBookShelfDataVolumeInfoIndustryIdentifiers {
  type: String
  identifier: String
}

type bookshelfBookShelfDataVolumeInfoReadingModes {
  text: Boolean
  image: Boolean
}

type bookshelfBookShelfDataVolumeInfoPanelizationSummary {
  containsEpubBubbles: Boolean
  containsImageBubbles: Boolean
}

type bookshelfBookShelfDataVolumeInfoImageLinks {
  smallThumbnail: String
  thumbnail: String
}

type bookshelfBookShelfDataSaleInfo {
  country: String
  saleability: String
  isEbook: Boolean
  listPrice: bookshelfBookShelfDataSaleInfoListPrice
  retailPrice: bookshelfBookShelfDataSaleInfoRetailPrice
  buyLink: String
  offers: [bookshelfBookShelfDataSaleInfoOffers]
}

type bookshelfBookShelfDataSaleInfoListPrice {
  amount: Int
  currencyCode: String
}

type bookshelfBookShelfDataSaleInfoRetailPrice {
  amount: Int
  currencyCode: String
}

type bookshelfBookShelfDataSaleInfoOffers {
  finskyOfferType: Int
  listPrice: bookshelfBookShelfDataSaleInfoOffersListPrice
  retailPrice: bookshelfBookShelfDataSaleInfoOffersRetailPrice
}

type bookshelfBookShelfDataSaleInfoOffersListPrice {
  amountInMicros: Int
  currencyCode: String
}

type bookshelfBookShelfDataSaleInfoOffersRetailPrice {
  amountInMicros: Int
  currencyCode: String
}

type bookshelfBookShelfDataAccessInfo {
  country: String
  viewability: String
  embeddable: Boolean
  publicDomain: Boolean
  textToSpeechPermission: String
  epub: bookshelfBookShelfDataAccessInfoEpub
  pdf: bookshelfBookShelfDataAccessInfoPdf
  webReaderLink: String
  accessViewStatus: String
  quoteSharingAllowed: Boolean
}

type bookshelfBookShelfDataAccessInfoEpub {
  isAvailable: Boolean
  acsTokenLink: String
}

type bookshelfBookShelfDataAccessInfoPdf {
  isAvailable: Boolean
}

type bookshelfBookShelfDataSearchInfo {
  textSnippet: String
}

type SiteBuildMetadata implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginPluginOptions {
  name: String
  path: String
  base64Width: Int
  stripMetadata: Boolean
  defaultQuality: Int
  failOnError: Boolean
  pathCheck: Boolean
  allExtensions: Boolean
  isTSX: Boolean
  jsxPragma: String
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  author: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, childMarkdownRemark: MarkdownRemarkFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(apiRoute: StringQueryOperatorInput, originalFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  markdownRemark(id: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, excerpt: StringQueryOperatorInput, rawMarkdownBody: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, excerptAst: JSONQueryOperatorInput, headings: MarkdownHeadingFilterListInput, timeToRead: IntQueryOperatorInput, tableOfContents: StringQueryOperatorInput, wordCount: MarkdownWordCountFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): MarkdownRemark
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, sort: MarkdownRemarkSortInput, skip: Int, limit: Int): MarkdownRemarkConnection!
  book(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, bookData: bookBookDataFilterInput): book
  allBook(filter: bookFilterInput, sort: bookSortInput, skip: Int, limit: Int): bookConnection!
  bookShelfData(isbn: StringQueryOperatorInput, volumeInfo: VolumeInfoFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): BookShelfData
  allBookShelfData(filter: BookShelfDataFilterInput, sort: BookShelfDataSortInput, skip: Int, limit: Int): BookShelfDataConnection!
  bookshelf(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, bookShelfData: bookshelfBookShelfDataFilterListInput): bookshelf
  allBookshelf(filter: bookshelfFilterInput, sort: bookshelfSortInput, skip: Int, limit: Int): bookshelfConnection!
  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input MarkdownRemarkFilterListInput {
  elemMatch: MarkdownRemarkFilterInput
}

input MarkdownRemarkFilterInput {
  id: StringQueryOperatorInput
  frontmatter: MarkdownRemarkFrontmatterFilterInput
  excerpt: StringQueryOperatorInput
  rawMarkdownBody: StringQueryOperatorInput
  fileAbsolutePath: StringQueryOperatorInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  headings: MarkdownHeadingFilterListInput
  timeToRead: IntQueryOperatorInput
  tableOfContents: StringQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input MarkdownRemarkFrontmatterFilterInput {
  title: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  date: DateQueryOperatorInput
  isbn: StringQueryOperatorInput
  genre: StringQueryOperatorInput
  rating: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

input MarkdownHeadingFilterInput {
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  publicURL
  childrenMarkdownRemark
  childrenMarkdownRemark___id
  childrenMarkdownRemark___frontmatter___title
  childrenMarkdownRemark___frontmatter___slug
  childrenMarkdownRemark___frontmatter___date
  childrenMarkdownRemark___frontmatter___isbn
  childrenMarkdownRemark___frontmatter___genre
  childrenMarkdownRemark___frontmatter___rating
  childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___id
  childMarkdownRemark___frontmatter___title
  childMarkdownRemark___frontmatter___slug
  childMarkdownRemark___frontmatter___date
  childMarkdownRemark___frontmatter___isbn
  childMarkdownRemark___frontmatter___genre
  childMarkdownRemark___frontmatter___rating
  childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenMarkdownRemark: MarkdownRemarkFilterListInput
  childMarkdownRemark: MarkdownRemarkFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  author: StringQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___author
  polyfill
  pathPrefix
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  apiRoute
  originalFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  apiRoute: StringQueryOperatorInput
  originalFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageContextFilterInput {
  slug: StringQueryOperatorInput
  isbn: StringQueryOperatorInput
  genre: StringQueryOperatorInput
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

input SitePluginPluginOptionsFilterInput {
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  base64Width: IntQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  defaultQuality: IntQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  allExtensions: BooleanQueryOperatorInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  author: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  context___slug
  context___isbn
  context___genre
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___author
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type MarkdownRemarkConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  sum(field: MarkdownRemarkFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

enum MarkdownRemarkFieldsEnum {
  id
  frontmatter___title
  frontmatter___slug
  frontmatter___date
  frontmatter___isbn
  frontmatter___genre
  frontmatter___rating
  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  rawMarkdownBody @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fileAbsolutePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type MarkdownRemarkGroupConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input bookBookDataFilterInput {
  kind: StringQueryOperatorInput
  id: StringQueryOperatorInput
  etag: StringQueryOperatorInput
  selfLink: StringQueryOperatorInput
  volumeInfo: bookBookDataVolumeInfoFilterInput
  saleInfo: bookBookDataSaleInfoFilterInput
  accessInfo: bookBookDataAccessInfoFilterInput
  searchInfo: bookBookDataSearchInfoFilterInput
  isbn: StringQueryOperatorInput
}

input bookBookDataVolumeInfoFilterInput {
  title: StringQueryOperatorInput
  subtitle: StringQueryOperatorInput
  authors: StringQueryOperatorInput
  publisher: StringQueryOperatorInput
  publishedDate: DateQueryOperatorInput
  description: StringQueryOperatorInput
  industryIdentifiers: bookBookDataVolumeInfoIndustryIdentifiersFilterListInput
  readingModes: bookBookDataVolumeInfoReadingModesFilterInput
  pageCount: IntQueryOperatorInput
  printType: StringQueryOperatorInput
  categories: StringQueryOperatorInput
  averageRating: FloatQueryOperatorInput
  ratingsCount: IntQueryOperatorInput
  maturityRating: StringQueryOperatorInput
  allowAnonLogging: BooleanQueryOperatorInput
  contentVersion: StringQueryOperatorInput
  panelizationSummary: bookBookDataVolumeInfoPanelizationSummaryFilterInput
  imageLinks: bookBookDataVolumeInfoImageLinksFilterInput
  language: StringQueryOperatorInput
  previewLink: StringQueryOperatorInput
  infoLink: StringQueryOperatorInput
  canonicalVolumeLink: StringQueryOperatorInput
}

input bookBookDataVolumeInfoIndustryIdentifiersFilterListInput {
  elemMatch: bookBookDataVolumeInfoIndustryIdentifiersFilterInput
}

input bookBookDataVolumeInfoIndustryIdentifiersFilterInput {
  type: StringQueryOperatorInput
  identifier: StringQueryOperatorInput
}

input bookBookDataVolumeInfoReadingModesFilterInput {
  text: BooleanQueryOperatorInput
  image: BooleanQueryOperatorInput
}

input bookBookDataVolumeInfoPanelizationSummaryFilterInput {
  containsEpubBubbles: BooleanQueryOperatorInput
  containsImageBubbles: BooleanQueryOperatorInput
}

input bookBookDataVolumeInfoImageLinksFilterInput {
  smallThumbnail: StringQueryOperatorInput
  thumbnail: StringQueryOperatorInput
}

input bookBookDataSaleInfoFilterInput {
  country: StringQueryOperatorInput
  saleability: StringQueryOperatorInput
  isEbook: BooleanQueryOperatorInput
  listPrice: bookBookDataSaleInfoListPriceFilterInput
  retailPrice: bookBookDataSaleInfoRetailPriceFilterInput
  buyLink: StringQueryOperatorInput
  offers: bookBookDataSaleInfoOffersFilterListInput
}

input bookBookDataSaleInfoListPriceFilterInput {
  amount: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookBookDataSaleInfoRetailPriceFilterInput {
  amount: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookBookDataSaleInfoOffersFilterListInput {
  elemMatch: bookBookDataSaleInfoOffersFilterInput
}

input bookBookDataSaleInfoOffersFilterInput {
  finskyOfferType: IntQueryOperatorInput
  listPrice: bookBookDataSaleInfoOffersListPriceFilterInput
  retailPrice: bookBookDataSaleInfoOffersRetailPriceFilterInput
}

input bookBookDataSaleInfoOffersListPriceFilterInput {
  amountInMicros: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookBookDataSaleInfoOffersRetailPriceFilterInput {
  amountInMicros: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookBookDataAccessInfoFilterInput {
  country: StringQueryOperatorInput
  viewability: StringQueryOperatorInput
  embeddable: BooleanQueryOperatorInput
  publicDomain: BooleanQueryOperatorInput
  textToSpeechPermission: StringQueryOperatorInput
  epub: bookBookDataAccessInfoEpubFilterInput
  pdf: bookBookDataAccessInfoPdfFilterInput
  webReaderLink: StringQueryOperatorInput
  accessViewStatus: StringQueryOperatorInput
  quoteSharingAllowed: BooleanQueryOperatorInput
}

input bookBookDataAccessInfoEpubFilterInput {
  isAvailable: BooleanQueryOperatorInput
  acsTokenLink: StringQueryOperatorInput
}

input bookBookDataAccessInfoPdfFilterInput {
  isAvailable: BooleanQueryOperatorInput
}

input bookBookDataSearchInfoFilterInput {
  textSnippet: StringQueryOperatorInput
}

type bookConnection {
  totalCount: Int!
  edges: [bookEdge!]!
  nodes: [book!]!
  pageInfo: PageInfo!
  distinct(field: bookFieldsEnum!): [String!]!
  max(field: bookFieldsEnum!): Float
  min(field: bookFieldsEnum!): Float
  sum(field: bookFieldsEnum!): Float
  group(skip: Int, limit: Int, field: bookFieldsEnum!): [bookGroupConnection!]!
}

type bookEdge {
  next: book
  node: book!
  previous: book
}

enum bookFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  bookData___kind
  bookData___id
  bookData___etag
  bookData___selfLink
  bookData___volumeInfo___title
  bookData___volumeInfo___subtitle
  bookData___volumeInfo___authors
  bookData___volumeInfo___publisher
  bookData___volumeInfo___publishedDate
  bookData___volumeInfo___description
  bookData___volumeInfo___industryIdentifiers
  bookData___volumeInfo___industryIdentifiers___type
  bookData___volumeInfo___industryIdentifiers___identifier
  bookData___volumeInfo___readingModes___text
  bookData___volumeInfo___readingModes___image
  bookData___volumeInfo___pageCount
  bookData___volumeInfo___printType
  bookData___volumeInfo___categories
  bookData___volumeInfo___averageRating
  bookData___volumeInfo___ratingsCount
  bookData___volumeInfo___maturityRating
  bookData___volumeInfo___allowAnonLogging
  bookData___volumeInfo___contentVersion
  bookData___volumeInfo___panelizationSummary___containsEpubBubbles
  bookData___volumeInfo___panelizationSummary___containsImageBubbles
  bookData___volumeInfo___imageLinks___smallThumbnail
  bookData___volumeInfo___imageLinks___thumbnail
  bookData___volumeInfo___language
  bookData___volumeInfo___previewLink
  bookData___volumeInfo___infoLink
  bookData___volumeInfo___canonicalVolumeLink
  bookData___saleInfo___country
  bookData___saleInfo___saleability
  bookData___saleInfo___isEbook
  bookData___saleInfo___listPrice___amount
  bookData___saleInfo___listPrice___currencyCode
  bookData___saleInfo___retailPrice___amount
  bookData___saleInfo___retailPrice___currencyCode
  bookData___saleInfo___buyLink
  bookData___saleInfo___offers
  bookData___saleInfo___offers___finskyOfferType
  bookData___accessInfo___country
  bookData___accessInfo___viewability
  bookData___accessInfo___embeddable
  bookData___accessInfo___publicDomain
  bookData___accessInfo___textToSpeechPermission
  bookData___accessInfo___epub___isAvailable
  bookData___accessInfo___epub___acsTokenLink
  bookData___accessInfo___pdf___isAvailable
  bookData___accessInfo___webReaderLink
  bookData___accessInfo___accessViewStatus
  bookData___accessInfo___quoteSharingAllowed
  bookData___searchInfo___textSnippet
  bookData___isbn
}

type bookGroupConnection {
  totalCount: Int!
  edges: [bookEdge!]!
  nodes: [book!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input bookFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  bookData: bookBookDataFilterInput
}

input bookSortInput {
  fields: [bookFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input VolumeInfoFilterInput {
  title: StringQueryOperatorInput
  subtitle: StringQueryOperatorInput
  publisher: StringQueryOperatorInput
  publishedDate: StringQueryOperatorInput
  description: StringQueryOperatorInput
  pageCount: IntQueryOperatorInput
  printType: StringQueryOperatorInput
  averageRating: IntQueryOperatorInput
  ratingsCount: IntQueryOperatorInput
  maturityRating: StringQueryOperatorInput
  allowAnonLogging: BooleanQueryOperatorInput
  contentVersion: StringQueryOperatorInput
  language: StringQueryOperatorInput
  previewLink: StringQueryOperatorInput
  infoLink: StringQueryOperatorInput
  canonicalVolumeLink: StringQueryOperatorInput
  imageLinks: ImageLinksFilterInput
  authors: StringQueryOperatorInput
}

input ImageLinksFilterInput {
  thumbnail: StringQueryOperatorInput
}

type BookShelfDataConnection {
  totalCount: Int!
  edges: [BookShelfDataEdge!]!
  nodes: [BookShelfData!]!
  pageInfo: PageInfo!
  distinct(field: BookShelfDataFieldsEnum!): [String!]!
  max(field: BookShelfDataFieldsEnum!): Float
  min(field: BookShelfDataFieldsEnum!): Float
  sum(field: BookShelfDataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: BookShelfDataFieldsEnum!): [BookShelfDataGroupConnection!]!
}

type BookShelfDataEdge {
  next: BookShelfData
  node: BookShelfData!
  previous: BookShelfData
}

enum BookShelfDataFieldsEnum {
  isbn
  volumeInfo___title
  volumeInfo___subtitle
  volumeInfo___publisher
  volumeInfo___publishedDate
  volumeInfo___description
  volumeInfo___pageCount
  volumeInfo___printType
  volumeInfo___averageRating
  volumeInfo___ratingsCount
  volumeInfo___maturityRating
  volumeInfo___allowAnonLogging
  volumeInfo___contentVersion
  volumeInfo___language
  volumeInfo___previewLink
  volumeInfo___infoLink
  volumeInfo___canonicalVolumeLink
  volumeInfo___imageLinks___thumbnail
  volumeInfo___authors
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type BookShelfDataGroupConnection {
  totalCount: Int!
  edges: [BookShelfDataEdge!]!
  nodes: [BookShelfData!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input BookShelfDataFilterInput {
  isbn: StringQueryOperatorInput
  volumeInfo: VolumeInfoFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input BookShelfDataSortInput {
  fields: [BookShelfDataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input bookshelfBookShelfDataFilterListInput {
  elemMatch: bookshelfBookShelfDataFilterInput
}

input bookshelfBookShelfDataFilterInput {
  kind: StringQueryOperatorInput
  id: StringQueryOperatorInput
  etag: StringQueryOperatorInput
  selfLink: StringQueryOperatorInput
  volumeInfo: bookshelfBookShelfDataVolumeInfoFilterInput
  saleInfo: bookshelfBookShelfDataSaleInfoFilterInput
  accessInfo: bookshelfBookShelfDataAccessInfoFilterInput
  searchInfo: bookshelfBookShelfDataSearchInfoFilterInput
  isbn: StringQueryOperatorInput
}

input bookshelfBookShelfDataVolumeInfoFilterInput {
  title: StringQueryOperatorInput
  subtitle: StringQueryOperatorInput
  authors: StringQueryOperatorInput
  publisher: StringQueryOperatorInput
  publishedDate: DateQueryOperatorInput
  description: StringQueryOperatorInput
  industryIdentifiers: bookshelfBookShelfDataVolumeInfoIndustryIdentifiersFilterListInput
  readingModes: bookshelfBookShelfDataVolumeInfoReadingModesFilterInput
  pageCount: IntQueryOperatorInput
  printType: StringQueryOperatorInput
  categories: StringQueryOperatorInput
  averageRating: FloatQueryOperatorInput
  ratingsCount: IntQueryOperatorInput
  maturityRating: StringQueryOperatorInput
  allowAnonLogging: BooleanQueryOperatorInput
  contentVersion: StringQueryOperatorInput
  panelizationSummary: bookshelfBookShelfDataVolumeInfoPanelizationSummaryFilterInput
  imageLinks: bookshelfBookShelfDataVolumeInfoImageLinksFilterInput
  language: StringQueryOperatorInput
  previewLink: StringQueryOperatorInput
  infoLink: StringQueryOperatorInput
  canonicalVolumeLink: StringQueryOperatorInput
}

input bookshelfBookShelfDataVolumeInfoIndustryIdentifiersFilterListInput {
  elemMatch: bookshelfBookShelfDataVolumeInfoIndustryIdentifiersFilterInput
}

input bookshelfBookShelfDataVolumeInfoIndustryIdentifiersFilterInput {
  type: StringQueryOperatorInput
  identifier: StringQueryOperatorInput
}

input bookshelfBookShelfDataVolumeInfoReadingModesFilterInput {
  text: BooleanQueryOperatorInput
  image: BooleanQueryOperatorInput
}

input bookshelfBookShelfDataVolumeInfoPanelizationSummaryFilterInput {
  containsEpubBubbles: BooleanQueryOperatorInput
  containsImageBubbles: BooleanQueryOperatorInput
}

input bookshelfBookShelfDataVolumeInfoImageLinksFilterInput {
  smallThumbnail: StringQueryOperatorInput
  thumbnail: StringQueryOperatorInput
}

input bookshelfBookShelfDataSaleInfoFilterInput {
  country: StringQueryOperatorInput
  saleability: StringQueryOperatorInput
  isEbook: BooleanQueryOperatorInput
  listPrice: bookshelfBookShelfDataSaleInfoListPriceFilterInput
  retailPrice: bookshelfBookShelfDataSaleInfoRetailPriceFilterInput
  buyLink: StringQueryOperatorInput
  offers: bookshelfBookShelfDataSaleInfoOffersFilterListInput
}

input bookshelfBookShelfDataSaleInfoListPriceFilterInput {
  amount: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookshelfBookShelfDataSaleInfoRetailPriceFilterInput {
  amount: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookshelfBookShelfDataSaleInfoOffersFilterListInput {
  elemMatch: bookshelfBookShelfDataSaleInfoOffersFilterInput
}

input bookshelfBookShelfDataSaleInfoOffersFilterInput {
  finskyOfferType: IntQueryOperatorInput
  listPrice: bookshelfBookShelfDataSaleInfoOffersListPriceFilterInput
  retailPrice: bookshelfBookShelfDataSaleInfoOffersRetailPriceFilterInput
}

input bookshelfBookShelfDataSaleInfoOffersListPriceFilterInput {
  amountInMicros: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookshelfBookShelfDataSaleInfoOffersRetailPriceFilterInput {
  amountInMicros: IntQueryOperatorInput
  currencyCode: StringQueryOperatorInput
}

input bookshelfBookShelfDataAccessInfoFilterInput {
  country: StringQueryOperatorInput
  viewability: StringQueryOperatorInput
  embeddable: BooleanQueryOperatorInput
  publicDomain: BooleanQueryOperatorInput
  textToSpeechPermission: StringQueryOperatorInput
  epub: bookshelfBookShelfDataAccessInfoEpubFilterInput
  pdf: bookshelfBookShelfDataAccessInfoPdfFilterInput
  webReaderLink: StringQueryOperatorInput
  accessViewStatus: StringQueryOperatorInput
  quoteSharingAllowed: BooleanQueryOperatorInput
}

input bookshelfBookShelfDataAccessInfoEpubFilterInput {
  isAvailable: BooleanQueryOperatorInput
  acsTokenLink: StringQueryOperatorInput
}

input bookshelfBookShelfDataAccessInfoPdfFilterInput {
  isAvailable: BooleanQueryOperatorInput
}

input bookshelfBookShelfDataSearchInfoFilterInput {
  textSnippet: StringQueryOperatorInput
}

type bookshelfConnection {
  totalCount: Int!
  edges: [bookshelfEdge!]!
  nodes: [bookshelf!]!
  pageInfo: PageInfo!
  distinct(field: bookshelfFieldsEnum!): [String!]!
  max(field: bookshelfFieldsEnum!): Float
  min(field: bookshelfFieldsEnum!): Float
  sum(field: bookshelfFieldsEnum!): Float
  group(skip: Int, limit: Int, field: bookshelfFieldsEnum!): [bookshelfGroupConnection!]!
}

type bookshelfEdge {
  next: bookshelf
  node: bookshelf!
  previous: bookshelf
}

enum bookshelfFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  bookShelfData
  bookShelfData___kind
  bookShelfData___id
  bookShelfData___etag
  bookShelfData___selfLink
  bookShelfData___volumeInfo___title
  bookShelfData___volumeInfo___subtitle
  bookShelfData___volumeInfo___authors
  bookShelfData___volumeInfo___publisher
  bookShelfData___volumeInfo___publishedDate
  bookShelfData___volumeInfo___description
  bookShelfData___volumeInfo___industryIdentifiers
  bookShelfData___volumeInfo___industryIdentifiers___type
  bookShelfData___volumeInfo___industryIdentifiers___identifier
  bookShelfData___volumeInfo___readingModes___text
  bookShelfData___volumeInfo___readingModes___image
  bookShelfData___volumeInfo___pageCount
  bookShelfData___volumeInfo___printType
  bookShelfData___volumeInfo___categories
  bookShelfData___volumeInfo___averageRating
  bookShelfData___volumeInfo___ratingsCount
  bookShelfData___volumeInfo___maturityRating
  bookShelfData___volumeInfo___allowAnonLogging
  bookShelfData___volumeInfo___contentVersion
  bookShelfData___volumeInfo___panelizationSummary___containsEpubBubbles
  bookShelfData___volumeInfo___panelizationSummary___containsImageBubbles
  bookShelfData___volumeInfo___imageLinks___smallThumbnail
  bookShelfData___volumeInfo___imageLinks___thumbnail
  bookShelfData___volumeInfo___language
  bookShelfData___volumeInfo___previewLink
  bookShelfData___volumeInfo___infoLink
  bookShelfData___volumeInfo___canonicalVolumeLink
  bookShelfData___saleInfo___country
  bookShelfData___saleInfo___saleability
  bookShelfData___saleInfo___isEbook
  bookShelfData___saleInfo___listPrice___amount
  bookShelfData___saleInfo___listPrice___currencyCode
  bookShelfData___saleInfo___retailPrice___amount
  bookShelfData___saleInfo___retailPrice___currencyCode
  bookShelfData___saleInfo___buyLink
  bookShelfData___saleInfo___offers
  bookShelfData___saleInfo___offers___finskyOfferType
  bookShelfData___accessInfo___country
  bookShelfData___accessInfo___viewability
  bookShelfData___accessInfo___embeddable
  bookShelfData___accessInfo___publicDomain
  bookShelfData___accessInfo___textToSpeechPermission
  bookShelfData___accessInfo___epub___isAvailable
  bookShelfData___accessInfo___epub___acsTokenLink
  bookShelfData___accessInfo___pdf___isAvailable
  bookShelfData___accessInfo___webReaderLink
  bookShelfData___accessInfo___accessViewStatus
  bookShelfData___accessInfo___quoteSharingAllowed
  bookShelfData___searchInfo___textSnippet
  bookShelfData___isbn
}

type bookshelfGroupConnection {
  totalCount: Int!
  edges: [bookshelfEdge!]!
  nodes: [bookshelf!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input bookshelfFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  bookShelfData: bookshelfBookShelfDataFilterListInput
}

input bookshelfSortInput {
  fields: [bookshelfFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  buildTime
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  buildTime: DateQueryOperatorInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___name
  pluginOptions___path
  pluginOptions___base64Width
  pluginOptions___stripMetadata
  pluginOptions___defaultQuality
  pluginOptions___failOnError
  pluginOptions___pathCheck
  pluginOptions___allExtensions
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___author
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}
