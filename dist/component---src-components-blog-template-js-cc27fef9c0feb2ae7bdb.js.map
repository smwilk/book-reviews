{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/ArrowBack.js","webpack:///./src/components/blogTemplate.js"],"names":["_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","theme","createMuiTheme","typography","fontFamily","join","button","textTransform","breakpoints","values","xs","sm","md","lg","xl","Template","data","markdownRemark","book","frontmatter","html","foundBook","bookData","id","to","className","href","container","spacing","item","src","volumeInfo","imageLinks","thumbnail","alt","title","authors","name","rating","readOnly","variant","disabled","genre","style","backgroundImage","date","dangerouslySetInnerHTML","__html"],"mappings":"kHAEA,IAAIA,EAAyB,EAAQ,QAEjCC,EAA0B,EAAQ,QAEtCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwB,EAAQ,SAIxCO,GAAW,EAFMR,EAAuB,EAAQ,SAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,iEACD,aAEJN,EAAQE,QAAUE,G,kCCnBlB,yIAWMG,GAXN,UAWcC,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,gBACA,qBACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACPC,OAAQ,CACNC,cAAe,SAGnBC,YAAa,CACXC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,UAyEKC,UApEE,SAAC,GAEX,IADLC,EACI,EADJA,KAEQC,EAAyBD,EAAzBC,eAAgBC,EAASF,EAATE,KAChBC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfC,EAAYH,EAAKI,SACvB,OACE,kBAAC,IAAD,CAAerB,MAAOA,GACpB,yBAAKsB,GAAG,uBACN,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,eACrB,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,uBAAGC,KAAK,IAAID,UAAU,kBAAtB,MAIF,6BAASA,UAAU,aACjB,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAME,WAAS,EAACC,QAAS,GACvB,kBAAC,IAAD,CAAMC,MAAI,EAACnB,GAAI,GAAIE,GAAI,EAAGa,UAAU,kBAClC,yBAAKA,UAAU,iBACb,yBACEK,IAAKT,EAAUU,WAAWC,WAAWC,UACrCC,IAAI,aACJT,UAAU,gBAIhB,kBAAC,IAAD,CAAMI,MAAI,EAACnB,GAAI,GAAIE,GAAI,EAAGa,UAAU,oBAClC,wBAAIA,UAAU,cAAcN,EAAYgB,OACxC,wBAAIV,UAAU,gBAAd,MACMJ,EAAUU,WAAWK,QAAQ/B,KAAK,OAExC,kBAAC,IAAD,CAAQgC,KAAK,YAAY1C,MAAOwB,EAAYmB,OAAQC,UAAQ,IAC5D,kBAAC,IAAD,CACEC,QAAQ,YACRf,UAAU,aACVgB,UAAQ,GAEPtB,EAAYuB,UAKrB,yBAAKjB,UAAU,+BACb,yBACEA,UAAU,0BACVkB,MAAO,CACLC,gBAAgB,OAAQvB,EAAUU,WAAWC,WAAWC,UAAzC,MAGjB,yBAAKR,UAAU,+BAIrB,0BAAMA,UAAU,kBACd,4BAAKN,EAAY0B,MACjB,yBACEpB,UAAU,oBACVqB,wBAAyB,CAAEC,OAAQ3B","file":"component---src-components-blog-template-js-cc27fef9c0feb2ae7bdb.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Button from \"@material-ui/core/Button\"\nimport Header from \"./header\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Rating from \"@material-ui/lab/Rating\"\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\nimport { Link } from \"gatsby\"\nimport \"./blogTemplate.css\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    button: {\n      textTransform: \"none\",\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 667,\n      md: 1045,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n})\n\nconst Template = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const { markdownRemark, book } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  const foundBook = book.bookData\n  return (\n    <ThemeProvider theme={theme}>\n      <div id=\"blog-post-container\">\n        <Link to=\"/\" className=\"back-button\">\n          <ArrowBackIcon />\n        </Link>\n        <Header>\n          <a href=\"#\" className=\"previous round\">\n            &#8249;\n          </a>\n        </Header>\n        <section className=\"blog-post\">\n          <div className=\"hero-content\">\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={3} className=\"book-thumbnail\">\n                <div className=\"book-gradient\">\n                  <img\n                    src={foundBook.volumeInfo.imageLinks.thumbnail}\n                    alt=\"book-cover\"\n                    className=\"thumbnail\"\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} md={8} className=\"book-description\">\n                <h1 className=\"book-title\">{frontmatter.title}</h1>\n                <h2 className=\"book-authors\">\n                  By {foundBook.volumeInfo.authors.join(\", \")}\n                </h2>\n                <Rating name=\"read-only\" value={frontmatter.rating} readOnly />\n                <Button\n                  variant=\"contained\"\n                  className=\"book-genre\"\n                  disabled\n                >\n                  {frontmatter.genre}\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n          <div className=\"background-banner-container\">\n            <div\n              className=\"background-banner-image\"\n              style={{\n                backgroundImage: `url(${foundBook.volumeInfo.imageLinks.thumbnail})`,\n              }}\n            >\n              <div className=\"background-banner-layer\" />\n            </div>\n          </div>\n        </section>\n        <main className=\"blog-post-main\">\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </main>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query($slug: String!, $isbn: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug }, isbn: { eq: $isbn } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        isbn\n        genre\n        rating\n      }\n    }\n    book(id: { eq: $isbn }) {\n      bookData {\n        isbn\n        volumeInfo {\n          title\n          subtitle\n          publisher\n          publishedDate\n          description\n          pageCount\n          printType\n          averageRating\n          ratingsCount\n          maturityRating\n          allowAnonLogging\n          contentVersion\n          language\n          previewLink\n          infoLink\n          canonicalVolumeLink\n          authors\n          imageLinks {\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}